apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ .Values.elasticsearch.appName }}
  namespace: {{ .Values.namespace }}
spec:
  selector:
    matchLabels:
      app: {{ .Values.elasticsearch.appName }} 
  serviceName: {{ .Values.elasticsearch.appName }}
  replicas: {{ .Values.replicas }}
  template:
    metadata:
      labels:
        app: {{ .Values.elasticsearch.appName }} # has to match .spec.selector.matchLabels
    spec:
      terminationGracePeriodSeconds: 10
      initContainers:
      - name: init-sysctl
        image: busybox
        imagePullPolicy: IfNotPresent
        command: ["/bin/sh","-c"]
        args: ["sysctl -w vm.max_map_count=262144; chown -R 1000:1000 {{ .Values.elasticsearch.volumeMountsPath }}"]
        securityContext:
          privileged: true
        volumeMounts:
          - name: {{ .Values.elasticsearch.volumeMountsName }}
            mountPath: {{ .Values.elasticsearch.volumeMountsPath }}
      containers:
      - name: {{ .Values.elasticsearch.appName }}
        image: {{ .Values.elasticsearch.image }}
        env:
        - name: discovery.type
          value: "single-node"
        ports:
        - containerPort: {{ .Values.elasticsearch.containerPort }}
          name: {{ .Values.elasticsearch.appName }}
        volumeMounts:
        - name: {{ .Values.elasticsearch.volumeMountsName }}
          mountPath: {{ .Values.elasticsearch.volumeMountsPath }}
  volumeClaimTemplates:
  - metadata:
      name: {{ .Values.elasticsearch.volumeMountsName }}
    spec:
      accessModes: [ "ReadWriteOnce" ]
      resources:
        requests:
          storage: 5Gi

